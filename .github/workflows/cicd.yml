name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    # - name: Install frontend dependencies
    #   run: |
    #     cd src/ui
    #     npm install

    # - name: Build frontend
    #   run: |
    #     cd src/ui
    #     npm run build

    # - name: Set up .NET
    #   uses: actions/setup-dotnet@v3
    #   with:
    #     dotnet-version: '8.0.x'

    # - name: Restore backend dependencies
    #   run: |
    #     cd src/api
    #     dotnet restore

    # - name: Build backend
    #   run: |
    #     cd src/api
    #     dotnet build --configuration Release

    # - name: Run tests
    #   run: |
    #     cd src/api
    #     dotnet test --configuration Release

    - name: Azure Login
      uses: azure/login@v2 # or azure/login@v1 if you prefer
      with:
        creds: '{ "clientId": "${{ secrets.AZURE_CLIENT_ID }}", "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}", "tenantId": "${{ secrets.AZURE_TENANT_ID }}", "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}" }
        enable-AzPSSession: false
        environment: azurecloud
        allow-no-subscriptions: false
        audience: api://AzureADTokenExchange
        auth-type: SERVICE_PRINCIPAL

    # - name: Build and push API Docker image
    #   run: |
    #     docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/glucose-monitor-api:${{ github.sha }} -f src/api/Dockerfile .
    #     docker push ${{ secrets.ACR_NAME }}.azurecr.io/glucose-monitor-api:${{ github.sha }}

    # - name: Build and push UI Docker image
    #   run: |
    #     docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/glucose-monitor-ui:${{ github.sha }} -f src/ui/Dockerfile .
    #     docker push ${{ secrets.ACR_NAME }}.azurecr.io/glucose-monitor-ui:${{ github.sha }}

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy API to Azure App Service
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #         app-name: 'YourAppName'
  #         images: '${{ secrets.ACR_NAME }}.azurecr.io/glucose-monitor-api:${{ github.sha }}'
  #     - name: Deploy UI to Azure Static Web App
  #       uses: azure/static-web-apps-deploy@v1
  #       with:
  #         azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}
  #         action: "upload"
  #         app_location: "/src/ui/build"
  #         api_location: ""
  #         output_location: ""